name: cd-executable

on:
  workflow_dispatch:
  
jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'
      - name: Build and Publish for Linux
        run: dotnet publish -c Release -r linux-x64 /p:AssemblyName=az-batch-helper --self-contained true /p:PublishSingleFile=true -o ${{ github.workspace }}/publish/linux-x64 src/AzBatchHelper/AzBatchHelper.Cli
      - name: Build and Publish for Windows
        run: dotnet publish -c Release -r win-x64 /p:AssemblyName=az-batch-helper --self-contained true /p:PublishSingleFile=true -o ${{ github.workspace }}/publish/win-x64 src/AzBatchHelper/AzBatchHelper.Cli
      - name: Build and Publish for macOS
        run: dotnet publish -c Release -r osx-x64 /p:AssemblyName=az-batch-helper --self-contained true /p:PublishSingleFile=true -o ${{ github.workspace }}/publish/osx-x64 src/AzBatchHelper/AzBatchHelper.Cli
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.${{ github.run_number }}
          release_name: Release 1.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-release-assets
        uses: actions/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_pattern: |
            win-x64/az-batch-helper.exe
            linux-x64/az-batch-helper
            osx-x64/az-batch-helper
